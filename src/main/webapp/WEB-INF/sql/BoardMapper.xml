<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.teamboard.dao.BoardDao">

  <resultMap type="Board" id="boardMap">
    <id column="board_no" property="boardNo"/>
    <result column="title" property="title"/>
    <result column="descripition" property="description"/>
    <result column="user_no" property="userNo"/>
    <result column="board_type" property="boardType"/>
    <result column="category" property="category"/>
    <result column="cre_dt" property="date"/>
    <result column="required" property="required"/>
  </resultMap>
  
  <resultMap type="BoardList" id="boardListMap">
  	 <id column="board_no" property="boardNo"/>
    <result column="title" property="title"/>
    <result column="descripition" property="description"/>
    <result column="user_no" property="userNo"/>
    <result column="board_type" property="boardType"/>
    <result column="category" property="category"/>
    <result column="cre_dt" property="date"/>
    <result column="name" property="userName"/>
    <result column="position" property="userPosition"/>
  </resultMap>
  
  <insert id="insertBoard" parameterType="Board">
		insert into board(title, description, user_no, board_type, category, cre_dt, required)
		values(#{title}, #{description}, #{userNo}, #{boardType}, #{category}, now(), #{required})
  </insert>

  <update id="updateBoard" parameterType="Board">
    update board set
    title=#{title},
    description=#{description},
    board_type=#{boardType},
    category=#{category},
    cre_dt=now(),
    required=#{required}
    where board_no=#{boardNo}
  </update>
  
  <delete id="deleteBoard" parameterType="int">
		delete from Board
		where board_no=#{value}
  </delete>
  
  <select id="findOne" resultMap="boardListMap" parameterType="int">
    select bo.board_no,bo.title,bo.description,bo.user_no,bo.board_type,bo.category, bo.cre_dt, mem.name, mem.position
		from board bo
		left join user mem on bo.user_no = mem.user_no
		where board_no = #{value}
  </select>
  
  <select id="findAll" resultMap="boardMap" parameterType="int">
    select board_no,title,description,user_no,board_type,category, cre_dt
		from board
  </select>

  <select id="findAllbyType" resultMap="boardListMap" parameterType="map">
    select bo.board_no,bo.title,bo.description,bo.user_no,bo.board_type,bo.category, bo.cre_dt, bo.required, mem.name, mem.position
		from board bo
		left join user mem on bo.user_no = mem.user_no
		where board_type = #{type} and required = #{required}
		order by bo.board_no desc
		limit #{startIndex}, #{length}
  </select>
  
  <select id="countType" resultType="int" parameterType="String">
  	select count(*) from board where board_type = #{value} and required = false
  </select>
  
  <select id="findAllbyTypeForMain" resultMap="boardListMap" parameterType="String">
    select bo.board_no,bo.title,bo.description,bo.user_no,bo.board_type,bo.category, bo.cre_dt, mem.name, mem.position
		from board bo
		left join user mem on bo.user_no = mem.user_no
		where board_type = #{value}
		order by bo.board_no desc
		limit 5
  </select>
  
  <select id="countCategory" resultType="int" parameterType="String">
  	select count(*) from board where category = #{value} and required = false
  </select>
  
  <select id="findAllbyCategory" resultMap="boardListMap" parameterType="map">
    select bo.board_no,bo.title,bo.description,bo.user_no,bo.board_type,bo.category, bo.cre_dt, bo.required, mem.name, mem.position
		from board bo
		left join user mem on bo.user_no = mem.user_no
		where category = #{category} and required = #{required}
		order by bo.board_no desc
		limit #{startIndex}, #{length}
  </select>
  
  <select id="findAllbyCategoryForMain" resultMap="boardListMap" parameterType="map">
    select bo.board_no,bo.title,bo.description,bo.user_no,bo.board_type,bo.category, bo.cre_dt, bo.required, mem.name, mem.position
		from board bo
		left join user mem on bo.user_no = mem.user_no
		where category = #{category} and required = #{required}
		order by bo.board_no desc
		limit #{length}
  </select>
</mapper>